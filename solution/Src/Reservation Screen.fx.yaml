"'Reservation Screen' As screen":

    Button1_3 As button:
        Color: =If(varHorarioSeleccionado = 'Horario (Capacidades)'.Mañana, varAppStyle.ColorFondo, varAppStyle.ColorPrincipal)
        Fill: =If(varHorarioSeleccionado = 'Horario (Capacidades)'.Mañana, varAppStyle.ColorPrincipal, varAppStyle.ColorFondo)
        Height: =150
        OnSelect: =Set(varHorarioSeleccionado, 'Horario (Capacidades)'.Mañana)
        PressedBorderColor: =ColorFade(Self.Fill, 80%)
        PressedFill: =ColorFade(Self.Fill, 80%)
        Size: =18
        Text: ="Mañana"
        Width: =150
        X: =21
        Y: =119
        ZIndex: =1

    Button1_4 As button:
        Color: =If(varHorarioSeleccionado = 'Horario (Capacidades)'.Tarde, varAppStyle.ColorFondo, varAppStyle.ColorPrincipal)
        Fill: =If(varHorarioSeleccionado = 'Horario (Capacidades)'.Tarde, varAppStyle.ColorPrincipal, varAppStyle.ColorFondo)
        Height: =150
        OnSelect: =Set(varHorarioSeleccionado, 'Horario (Capacidades)'.Tarde)
        Size: =18
        Text: ="Tarde"
        Width: =150
        X: =244
        Y: =119
        ZIndex: =2

    Button1_5 As button:
        Color: =If(varHorarioSeleccionado = Blank(), varAppStyle.ColorFondo, varAppStyle.ColorPrincipal)
        Fill: =If(varHorarioSeleccionado = Blank(), varAppStyle.ColorPrincipal, varAppStyle.ColorFondo)
        Height: =150
        OnSelect: |-
            =Set(varHorarioSeleccionado, Blank());
            ClearCollect(colDisponibilidadSedePiso, AddColumns(GroupBy(colDisponibilidadSede, "msus_fecha", "capacidad") , "CountOfRows", CountRows(capacidad) ) )
        Size: =18
        Text: ="Completa"
        Width: =150
        X: =465
        Y: =119
        ZIndex: =3

    Button2 As button:
        DisplayMode: =If(lbl_capacidadinsuficiente.Visible , DisplayMode.Disabled, DisplayMode.Edit)
        Height: =66
        OnSelect: =Navigate('Floor Screen')
        Size: =21
        Text: ="Escoge un piso"
        Width: =597
        X: =18
        Y: =1012
        ZIndex: =9

    Label3 As label:
        FontWeight: =FontWeight.Semibold
        Height: =70
        PaddingBottom: =20
        PaddingRight: =20
        PaddingTop: =20
        Size: =21
        Text: |-
            ="Paso 1: Selecciona un horario"
        Width: =560
        X: =21
        Y: =30
        ZIndex: =10

    Label3_1 As label:
        FontWeight: =FontWeight.Semibold
        Height: =70
        PaddingBottom: =20
        PaddingTop: =20
        Size: =21
        Text: |-
            ="Paso 2: Selecciona una fecha"
        Width: =560
        X: =21
        Y: =288
        ZIndex: =11

    lbl_capacidadinsuficiente As label:
        AutoHeight: =true
        Height: =76
        PaddingBottom: =20
        PaddingTop: =20
        Size: =16
        Text: ="El día " & Text(varFechaSeleccionada, "dd-mmm-yy") & " no hay capacidad suficiente para el horario seleccionado"
        Visible: |-
            =/*Visible if availability is found on this day*/ 
            !Switch( varHorarioSeleccionado, 
            'Horario (Capacidades)'.Mañana,    //Si el horario seleccionado es "Mañana"           
            CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,MonthDayGallery1_1.Selected.Value,Days) And msus_horario = 'Horario (Capacidades)'.Mañana)) > 0  && Title5_1.Visible,
            'Horario (Capacidades)'.Tarde, //Si el horario seleccionado es "Tarde";
            CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,MonthDayGallery1_1.Selected.Value,Days) And msus_horario = 'Horario (Capacidades)'.Tarde)) > 0 && Title5_1.Visible,
            Blank(), //Si el horario seleccionado es "Completo"
            CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,MonthDayGallery1_1.Selected.Value,Days) And msus_horario = 'Horario (Capacidades)'.Mañana)) > 0  && CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,MonthDayGallery1_1.Selected.Value,Days) And msus_horario = 'Horario (Capacidades)'.Tarde)) > 0 && Title5_1.Visible
            )
        Width: =597
        X: =18
        Y: =919
        ZIndex: =12

    Group1 As group:
        Height: =5
        Width: =5
        X: =40
        Y: =40
        ZIndex: =12

        LblMonthSelected1_1 As label:
            Align: =Align.Center
            Height: =64
            Size: =21
            Text: =Text(_firstDayOfMonth, "mmmm yyyy")
            Width: =Parent.Width
            Wrap: =false
            Y: =370
            ZIndex: =4

        iconPrevMonth1_1 As icon.ChevronLeft:
            Icon: =Icon.ChevronLeft
            OnSelect: |-
                =/*changes month view to previous month*/
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, -1, Months));           
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));           
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days));
                
                /*Updates _minDate to prevent duplicate data collection if user returns to this month view*/           
                If(_minDate > _firstDayOfMonth, Set(_minDate, _firstDayInView))
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            TabIndex: =0
            Tooltip: ="Ver el mes anterior"
            Width: =91
            Y: =370
            ZIndex: =5

        iconNextMonth1_1 As icon.ChevronRight:
            Icon: =Icon.ChevronRight
            OnSelect: |-
                =/*changes month view to next month*/
                Set(_firstDayOfMonth, DateAdd(_firstDayOfMonth, 1, Months));           
                Set(_firstDayInView, DateAdd(_firstDayOfMonth, -(Weekday(_firstDayOfMonth) - 2 + 1), Days));
                
                /*Updates _maxDate to prevent duplicate data collection if user returns to this month view*/           
                Set(_lastDayOfMonth, DateAdd(DateAdd(_firstDayOfMonth, 1, Months), -1, Days));           
                If(_maxDate < _lastDayOfMonth, Set(_maxDate, DateAdd(_firstDayInView, 40, Days)))
            PaddingBottom: =10
            PaddingLeft: =10
            PaddingRight: =10
            PaddingTop: =10
            TabIndex: =0
            Tooltip: ="Ver el mes siguiente"
            Width: =91
            X: =Parent.Width - Self.Width
            Y: =370
            ZIndex: =6

        WeekdayGallery1_1 As gallery.WeekdayGallery:
            AccessibleLabel: ="Días de la semana"
            Height: =56
            Items: =Calendar.WeekdaysShort()
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =91
            Y: =434
            ZIndex: =7

            Title4_1 As label:
                Align: =Align.Center
                Height: =WeekdayGallery1_1.TemplateHeight
                OnSelect: =Select(Parent)
                Size: =17 * WeekdayGallery1_1.TemplateWidth / 77
                Text: =ThisItem.Value
                VerticalAlign: =Middle
                Width: =WeekdayGallery1_1.TemplateWidth
                Wrap: =false
                X: =WeekdayGallery1_1.TemplateWidth / 2 - Self.Width / 2
                Y: =WeekdayGallery1_1.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =1

        MonthDayGallery1_1 As gallery.MonthDayGallery:
            AccessibleLabel: ="Días del mes seleccionado"
            Height: =330
            Items: =[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19, 20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41]
            Layout: =Layout.Vertical
            OnSelect: =Set(varFechaSeleccionada, DateAdd(_firstDayInView, ThisItem.Value, Days));
            ShowScrollbar: =false
            TemplatePadding: =0
            TemplateSize: =65
            Width: =597
            WrapCount: =7
            X: =18
            Y: =490
            ZIndex: =8

            Subcircle1_1 As circle:
                DisabledFill: =RGBA(200, 200, 200, 0.3)
                DisplayMode: =If(Circle1_1.Visible, DisplayMode.Edit, DisplayMode.Disabled)
                Fill: =RGBA(0, 121, 187, 1)
                Height: =3 * Title5_1.Size
                OnSelect: =Select(Parent)
                Visible: =And(DateAdd(_firstDayInView, ThisItem.Value) = varFechaSeleccionada, Title5_1.Visible)
                Width: =Self.Height
                X: =MonthDayGallery1_1.TemplateWidth/2 - Self.Width/2
                Y: =MonthDayGallery1_1.TemplateHeight / 2 - Self.Height / 2
                ZIndex: =1

            Circle1_1 As circle:
                Fill: =varAppStyle.ColorSecundario
                Height: =Self.Width
                OnSelect: =Select(Parent)
                Visible: |-
                    =/*Visible if availability is found on this day*/ 
                    Switch( varHorarioSeleccionado, 
                    'Horario (Capacidades)'.Mañana,    //Si el horario seleccionado es "Mañana"           
                    CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Mañana)) > 0  && Title5_1.Visible,
                    'Horario (Capacidades)'.Tarde, //Si el horario seleccionado es "Tarde";
                    CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Tarde)) > 0 && Title5_1.Visible,
                    Blank(), //Si el horario seleccionado es "Completo"
                    CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Mañana)) > 0  && CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Tarde)) > 0 && Title5_1.Visible
                    )
                Width: =6.5
                X: =MonthDayGallery1_1.TemplateWidth / 2 - Self.Width / 2
                Y: =MonthDayGallery1_1.TemplateHeight * (0.75)
                ZIndex: =2

            Title5_1 As label:
                Align: =Align.Center
                BorderColor: =RGBA(0, 0, 0, 0)
                Color: |-
                    =If(And(DateAdd(_firstDayInView, ThisItem.Value) = varFechaSeleccionada, Title5_1.Visible), varAppStyle.ColorFondo, 
                    /*if availability is found on this day*/ 
                    (Switch( varHorarioSeleccionado, 
                    'Horario (Capacidades)'.Mañana,    //Si el horario seleccionado es "Mañana"           
                    CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Mañana)) > 0  && Title5_1.Visible,
                    'Horario (Capacidades)'.Tarde, //Si el horario seleccionado es "Tarde";
                    CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Tarde)) > 0 && Title5_1.Visible,
                    Blank(), //Si el horario seleccionado es "Completo"
                    CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Mañana)) > 0  && CountRows(Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateAdd(_firstDayInView,ThisItem.Value,Days) And msus_horario = 'Horario (Capacidades)'.Tarde)) > 0 && Title5_1.Visible
                    )), varAppStyle.ColorFuente, RGBA(100, 100, 100, 0.8))
                DisabledFill: |-
                    =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                    If(
                        /*Date selected is today*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = varFechaSeleccionada, RGBA(0,0,0,0),
                        /*Today when it is not selected*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today(), RGBA(0,0,0,0), 
                        /*The day is outside the range of the currently selected month*/
                        Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                Fill: |-
                    =/*Fill value changes if the gallery item day = today, or if it lies outside of the current month*/             
                    If(
                        /*Date selected is today*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today() && DateAdd(_firstDayInView, ThisItem.Value) = varFechaSeleccionada, RGBA(0,0,0,0),
                        /*Today when it is not selected*/
                        DateAdd(_firstDayInView, ThisItem.Value) = Today(), ColorFade(Subcircle1_1.Fill, 0.67), 
                        /*The day is outside the range of the currently selected month*/
                        Abs(Self.Text - ThisItem.Value) > 10,RGBA(200, 200, 200, 0.3), RGBA(0, 0, 0, 0))
                FocusedBorderColor: =Self.Color
                FocusedBorderThickness: =2
                Height: =MonthDayGallery1_1.TemplateHeight
                OnSelect: |-
                    =Select(Parent);
                    Set(varFechaSeleccionada, DateAdd(_firstDayInView, ThisItem.Value, Days));
                    ClearCollect(colDisponibilidadSedeDia, Filter(colDisponibilidadSede, DateValue(msus_fecha) = DateValue(varFechaSeleccionada)) )
                Size: =17 * MonthDayGallery1_1.TemplateWidth / 91
                TabIndex: =0
                Text: =Day(DateAdd(_firstDayInView,ThisItem.Value,Days))
                VerticalAlign: =Middle
                Visible: |-
                    =/*This item is in a row containing no days of the visible month. It is in the row after the row where the last day of the month occurs*/ 
                     !(DateAdd(_firstDayInView,ThisItem.Value,Days) - Weekday(DateAdd(_firstDayInView,ThisItem.Value,Days)) + 1 > _lastDayOfMonth)
                Width: =MonthDayGallery1_1.TemplateWidth
                Wrap: =false
                ZIndex: =3

